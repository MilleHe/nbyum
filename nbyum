#!/usr/bin/python

import argparse
import sys


try:
    import nbyum
except ImportError:
    # We're probably running in a development environment
    import os

    sys.path.append(os.path.join(os.path.dirname(sys.argv[0]), "src"))
    import nbyum


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Just like yum, " \
                                                 "but with a usable output")
    parser.add_argument("-d", "--debug", action="store_true",
                        help="Print some useful debug information")

    subparsers = parser.add_subparsers(title="subcommands")

    parser_checkupdate = subparsers.add_parser("check-update",
                                               help="Check for updates to " \
                                                    "installed packages")
    parser_checkupdate.add_argument("packages", nargs="*", metavar="PACKAGE",
                                    help="The package(s) for which to check " \
                                         "if an update is available. An " \
                                         "arbitrary number can be specified." \
                                         " If none is, updates for the whole" \
                                         " system are checked.")
    parser_checkupdate.set_defaults(func="check_update")

    parser_update = subparsers.add_parser("update",
                                          help="Update packages or the " \
                                               "whole system")
    parser_update.add_argument("packages", nargs="*", metavar="PACKAGE",
                               help="The package(s) to update. An arbitrary " \
                                    "number can be specified. If none is, " \
                                    "the whole system is updated.")
    parser_update.set_defaults(func="update")

    args = parser.parse_args()

    yummy = nbyum.NBYumCli(args)

    try:
        yummy.run()

    except Exception, e:
        print("{'error': '%s'}" % e)
        sys.exit(1)

    sys.exit(0)
